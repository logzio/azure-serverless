{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.4",
    "parameters":
    {
        "FunctionAppVersion": {
            "type": "string",
            "defaultValue": "[deployment().properties.template.contentVersion]",
            "metadata": {
                "description": "The version of the function app being deployed."
            }
        },
        "FailedLogBackupContainer":
        {
            "defaultValue": "failedlogbackup",
            "minLength": 3,
            "maxLength": 63,
            "type": "string",
            "metadata":
            {
                "description": "The name of the blob container within the storage account."
            }
        },
        "LogzioURL":
        {
            "defaultValue": "https://listener.logz.io:8071",
            "type": "string",
            "allowedValues":
            [
                "https://listener.logz.io:8071",
                "https://listener-au.logz.io:8071",
                "https://listener-ca.logz.io:8071",
                "https://listener-eu.logz.io:8071",
                "https://listener-nl.logz.io:8071",
                "https://listener-uk.logz.io:8071",
                "https://listener-wa.logz.io:8071",
                "CUSTOM"
            ],
            "metadata":
            {
                "description": "Select a predefined Logz.io listener URL for your region, or CUSTOM to provide your own."
            }
        },
        "CustomLogzioURL":
        {
            "type": "string",
            "defaultValue": "",
            "metadata":
            {
                "description": "Custom Logz.io listener URL (e.g., https://listener-custom.logz.io:8071). Used only when LogzioURL is set to CUSTOM."
            }
        },
        "UseKeyVaultForToken": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "If true, read LogzioToken from an existing Key Vault secret reference."
            }
        },
        "LogzioTokenSecretUri": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Full Key Vault Secret URI (prefer versioned), e.g. https://<kv>.vault.azure.net/secrets/<name>/<version>. Required when UseKeyVaultForToken is true."
            }
        },
        "KeyVaultResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource ID of the existing Key Vault, e.g. /subscriptions/<sub>/resourceGroups/<rg>/providers/Microsoft.KeyVault/vaults/<kv>. Required when UseKeyVaultForToken is true."
            }
        },
        "LogzioToken":
        {
            "type": "string",
            "defaultValue": "",
            "metadata":
            {
                "description": "Your Logz.io logs token. Leave empty if UseKeyVaultForToken is true."
            }
        },
        "AppServicePlanName":
        {
            "defaultValue": "[concat('ASP-', variables('FunctionAppName'))]",
            "type": "string",
            "metadata":
            {
                "description": "The name of the App Service Plan to use."
            }
        },
        "FunctionAppStorageAccountName":
        {
            "defaultValue": "[concat('fa', uniqueString(resourceGroup().id))]",
            "type": "string",
            "metadata":
            {
                "description": "The name of the storage account for the Function App."
            }
        },
        "EventhubNamespace":
        {
            "defaultValue": "[concat('LogzioLNS', uniqueString(resourceGroup().id))]",
            "type": "string"
        },
        "EventhubLogsName":
        {
            "defaultValue": "logzioeventhub",
            "type": "string"
        },
        "AppInsightsName": 
        {
            "defaultValue":"[concat('logzioLInsight', uniqueString(resourceGroup().id))]",
            "type": "string"
        },
        "LogAnalyticsWorkspaceName": 
        {
            "defaultValue": "[concat('logzioWorkspace', uniqueString(resourceGroup().id))]",
            "type": "string"
        },
        "location":
        {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata":
            {
                "description": "Location for all resources."
            }
        },
        "ThreadCount":
        {
            "type": "int",
            "defaultValue": 4,
            "allowedValues":
            [
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "metadata":
            {
                "description": "The number of threads to use, between 4 and 10."
            }
        },
        "bufferSize":
        {
            "type": "int",
            "defaultValue": 100,
            "minValue": 50,
            "maxValue": 500,
            "metadata":
            {
                "description": "The size of the log buffer. Minimum 50, maximum 500."
            }
        },
        "intervalTime":
        {
            "type": "int",
            "defaultValue": 10000,
            "minValue": 5000,
            "maxValue": 60000,
            "metadata":
            {
                "description": "The interval time for sending logs in milliseconds. Minimum 5000 (5 seconds), maximum 60000 (60 seconds)."
            }
        },
        "MaxTries": {
            "type": "int",
            "defaultValue": 3,
            "minValue": 1,
            "maxValue": 8,
            "metadata":
            {
                "description": "The maximum number of retries for the backoff mechanism."
            }
        },
        "LogType": {
            "defaultValue": "eventHub",
            "type": "string",
            "metadata": {
                "description": "The type of the logs being processed."
            }
        }
    },
    "variables":
    {
        "functionAppId": "[resourceId('Microsoft.Web/sites', variables('FunctionAppName'))]",
        "FunctionAppName": "[concat('logzioLFunctionApp', uniqueString(resourceGroup().id))]"
    },
    "resources":
    [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-02-01",
            "name": "[parameters('FunctionAppStorageAccountName')]",
            "location": "[parameters('location')]",
            "sku":
            {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
            "encryption": {
              "services": {
                "file": {
                  "enabled": true
                },
                "blob": {
                  "enabled": true
                }
              },
              "keySource": "Microsoft.Storage"
            },
            "accessTier": "Hot"
          },
          "resources": [
            {
              "type": "blobServices/containers",
              "apiVersion": "2021-02-01",
              "name": "[concat('default/', parameters('FailedLogBackupContainer'))]",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', parameters('FunctionAppStorageAccountName'))]"
              ]
            }
          ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[parameters('AppServicePlanName')]",
            "location": "[parameters('location')]",
            "sku":
            {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties":
            {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('FunctionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn":
            [
                "[resourceId('Microsoft.Web/serverfarms', parameters('AppServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('FunctionAppStorageAccountName'))]"
            ],
            "properties":
            {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('AppServicePlanName'))]",
                "siteConfig":
                {
                    "pythonVersion": "3.11",
                    "linuxFxVersion": "PYTHON|3.11",
                    "appSettings":
                    [
                        {
                            "name": "FUNCTION_VERSION",
                            "value": "[parameters('FunctionAppVersion')]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('FunctionAppStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('FunctionAppStorageAccountName')), '2021-02-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "https://logzioblobtrigger.blob.core.windows.net/eventhub/logzio_function-v0.0.2.zip"
                        },
                        {
                            "name": "LogzioURL",
                            "value": "[if(equals(parameters('LogzioURL'), 'CUSTOM'), parameters('CustomLogzioURL'), parameters('LogzioURL'))]"
                        },
                        {
                            "name": "LogzioToken",
                            "value": "[if(parameters('UseKeyVaultForToken'), concat('@Microsoft.KeyVault(SecretUri=', parameters('LogzioTokenSecretUri'), ')'), parameters('LogzioToken'))]"
                        },
                        {
                            "name": "AzureWebJobsEventHubConnectionString",
                            "value": "[concat('Endpoint=sb://', parameters('EventhubNamespace'), '.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=', listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('EventhubNamespace'), 'RootManageSharedAccessKey'), '2023-01-01-preview').primarykey)]"
                        },
                        {
                            "name": "EventhubLogsName",
                            "value": "[parameters('EventhubLogsName')]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('AppInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsFeatureFlags",
                            "value": "EnableWorkerIndexing"
                        },
                        {
                            "name": "AZURE_STORAGE_CONTAINER_NAME",
                            "value": "[parameters('FailedLogBackupContainer')]"
                        },
                        {
                            "name": "THREAD_COUNT",
                            "value": "[parameters('ThreadCount')]"
                        },
                        {
                            "name": "BUFFER_SIZE",
                            "value": "[parameters('bufferSize')]"
                        },
                        {
                            "name": "INTERVAL_TIME",
                            "value": "[parameters('intervalTime')]"
                        },
                        {
                            "name": "MAX_TRIES",
                            "value": "[parameters('MaxTries')]"
                        },
                        {
                            "name": "LOG_TYPE",
                            "value": "[parameters('LogType')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2023-01-01-preview",
            "name": "[parameters('EventhubNamespace')]",
            "location": "[parameters('location')]",
            "sku":
            {
                "name": "Standard"
            },
            "properties":
            {
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 20
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(parameters('EventhubNamespace'), '/', parameters('EventhubLogsName'))]",
            "apiVersion": "2023-01-01-preview",
            "location": "[parameters('location')]",
            "scale": null,
            "properties":
            {
                "messageRetentionInDays": 7,
                "partitionCount": 32,
                "status": "Active"
            },
            "dependsOn":
            [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('EventhubNamespace'))]"
            ]
        },
        {
			"type": "Microsoft.OperationalInsights/workspaces",
			"apiVersion": "2021-12-01-preview",
			"name": "[parameters('LogAnalyticsWorkspaceName')]",
			"location": "[parameters('location')]",
			"properties": {
				"sku": {
				  "name": "PerGB2018"
				}
			}
		},
        {
            "name": "[parameters('AppInsightsName')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "location": "[parameters('location')]",
            "kind": "web",
			"dependsOn": [
				"[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
			],
            "properties": {
              "Application_Type": "web",
              "applicationId": "[parameters('AppInsightsName')]",
			  "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('LogAnalyticsWorkspaceName'))]"
            }
        },
        {
            "condition": "[parameters('UseKeyVaultForToken')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('KeyVaultResourceId'), variables('FunctionAppName'), 'kv-secrets-user')]",
            "scope": "[parameters('KeyVaultResourceId')]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionAppName')), '2020-12-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('FunctionAppName'))]"
            ]
        }
    ]
}
